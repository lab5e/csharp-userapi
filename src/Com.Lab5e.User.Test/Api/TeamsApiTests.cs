/*
 * The User API
 *
 * API to manage teams, members and tokens
 *
 * The version of the OpenAPI document: 1.3.7 frequent-amara
 * Contact: dev@lab5e.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Com.Lab5e.User.Client;
using Com.Lab5e.User.Api;
// uncomment below to import models
//using Com.Lab5e.User.Model;

namespace Com.Lab5e.User.Test.Api
{
    /// <summary>
    ///  Class for testing TeamsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TeamsApiTests : IDisposable
    {
        private TeamsApi instance;

        public TeamsApiTests()
        {
            instance = new TeamsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TeamsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TeamsApi
            //Assert.IsType<TeamsApi>(instance);
        }

        /// <summary>
        /// Test AcceptInvite
        /// </summary>
        [Fact]
        public void AcceptInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AcceptInviteRequest body = null;
            //var response = instance.AcceptInvite(body);
            //Assert.IsType<Team>(response);
        }

        /// <summary>
        /// Test CreateTeam
        /// </summary>
        [Fact]
        public void CreateTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Team body = null;
            //var response = instance.CreateTeam(body);
            //Assert.IsType<Team>(response);
        }

        /// <summary>
        /// Test DeleteInvite
        /// </summary>
        [Fact]
        public void DeleteInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string code = null;
            //var response = instance.DeleteInvite(teamId, code);
            //Assert.IsType<DeleteInviteResponse>(response);
        }

        /// <summary>
        /// Test DeleteMember
        /// </summary>
        [Fact]
        public void DeleteMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string userId = null;
            //var response = instance.DeleteMember(teamId, userId);
            //Assert.IsType<Member>(response);
        }

        /// <summary>
        /// Test DeleteTeam
        /// </summary>
        [Fact]
        public void DeleteTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //var response = instance.DeleteTeam(teamId);
            //Assert.IsType<Team>(response);
        }

        /// <summary>
        /// Test GenerateInvite
        /// </summary>
        [Fact]
        public void GenerateInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //InviteRequest body = null;
            //var response = instance.GenerateInvite(teamId, body);
            //Assert.IsType<Invite>(response);
        }

        /// <summary>
        /// Test ListInvites
        /// </summary>
        [Fact]
        public void ListInvitesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //var response = instance.ListInvites(teamId);
            //Assert.IsType<InviteList>(response);
        }

        /// <summary>
        /// Test ListTeams
        /// </summary>
        [Fact]
        public void ListTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ListTeams();
            //Assert.IsType<TeamList>(response);
        }

        /// <summary>
        /// Test RetrieveInvite
        /// </summary>
        [Fact]
        public void RetrieveInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string code = null;
            //var response = instance.RetrieveInvite(teamId, code);
            //Assert.IsType<Invite>(response);
        }

        /// <summary>
        /// Test RetrieveMember
        /// </summary>
        [Fact]
        public void RetrieveMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string userId = null;
            //var response = instance.RetrieveMember(teamId, userId);
            //Assert.IsType<Member>(response);
        }

        /// <summary>
        /// Test RetrieveTeam
        /// </summary>
        [Fact]
        public void RetrieveTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //var response = instance.RetrieveTeam(teamId);
            //Assert.IsType<Team>(response);
        }

        /// <summary>
        /// Test RetrieveTeamMembers
        /// </summary>
        [Fact]
        public void RetrieveTeamMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //var response = instance.RetrieveTeamMembers(teamId);
            //Assert.IsType<MemberList>(response);
        }

        /// <summary>
        /// Test UpdateMember
        /// </summary>
        [Fact]
        public void UpdateMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string userId = null;
            //Member body = null;
            //var response = instance.UpdateMember(teamId, userId, body);
            //Assert.IsType<Member>(response);
        }

        /// <summary>
        /// Test UpdateTeam
        /// </summary>
        [Fact]
        public void UpdateTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //Team body = null;
            //var response = instance.UpdateTeam(teamId, body);
            //Assert.IsType<Team>(response);
        }
    }
}
