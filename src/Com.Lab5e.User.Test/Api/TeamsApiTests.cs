/*
 * The User API
 *
 * API to manage teams, members and tokens
 *
 * The version of the OpenAPI document: 1.3.4 breezy-leafy
 * Contact: dev@lab5e.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Com.Lab5e.User.Client;
using Com.Lab5e.User.Api;
// uncomment below to import models
//using Com.Lab5e.User.Model;

namespace Com.Lab5e.User.Test.Api
{
    /// <summary>
    ///  Class for testing TeamsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TeamsApiTests : IDisposable
    {
        private TeamsApi instance;

        public TeamsApiTests()
        {
            instance = new TeamsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TeamsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' TeamsApi
            //Assert.IsType<TeamsApi>(instance);
        }

        /// <summary>
        /// Test UserAcceptInvite
        /// </summary>
        [Fact]
        public void UserAcceptInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AcceptInviteRequest body = null;
            //var response = instance.UserAcceptInvite(body);
            //Assert.IsType<Team>(response);
        }

        /// <summary>
        /// Test UserCreateTeam
        /// </summary>
        [Fact]
        public void UserCreateTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Team body = null;
            //var response = instance.UserCreateTeam(body);
            //Assert.IsType<Team>(response);
        }

        /// <summary>
        /// Test UserDeleteInvite
        /// </summary>
        [Fact]
        public void UserDeleteInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string code = null;
            //var response = instance.UserDeleteInvite(teamId, code);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UserDeleteMember
        /// </summary>
        [Fact]
        public void UserDeleteMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string userId = null;
            //var response = instance.UserDeleteMember(teamId, userId);
            //Assert.IsType<Member>(response);
        }

        /// <summary>
        /// Test UserDeleteTeam
        /// </summary>
        [Fact]
        public void UserDeleteTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //var response = instance.UserDeleteTeam(teamId);
            //Assert.IsType<Team>(response);
        }

        /// <summary>
        /// Test UserGenerateInvite
        /// </summary>
        [Fact]
        public void UserGenerateInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //InviteRequest body = null;
            //var response = instance.UserGenerateInvite(teamId, body);
            //Assert.IsType<Invite>(response);
        }

        /// <summary>
        /// Test UserListInvites
        /// </summary>
        [Fact]
        public void UserListInvitesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //var response = instance.UserListInvites(teamId);
            //Assert.IsType<InviteList>(response);
        }

        /// <summary>
        /// Test UserListTeams
        /// </summary>
        [Fact]
        public void UserListTeamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.UserListTeams();
            //Assert.IsType<TeamList>(response);
        }

        /// <summary>
        /// Test UserRetrieveInvite
        /// </summary>
        [Fact]
        public void UserRetrieveInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string code = null;
            //var response = instance.UserRetrieveInvite(teamId, code);
            //Assert.IsType<Invite>(response);
        }

        /// <summary>
        /// Test UserRetrieveMember
        /// </summary>
        [Fact]
        public void UserRetrieveMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string userId = null;
            //var response = instance.UserRetrieveMember(teamId, userId);
            //Assert.IsType<Member>(response);
        }

        /// <summary>
        /// Test UserRetrieveTeam
        /// </summary>
        [Fact]
        public void UserRetrieveTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //var response = instance.UserRetrieveTeam(teamId);
            //Assert.IsType<Team>(response);
        }

        /// <summary>
        /// Test UserRetrieveTeamMembers
        /// </summary>
        [Fact]
        public void UserRetrieveTeamMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //var response = instance.UserRetrieveTeamMembers(teamId);
            //Assert.IsType<MemberList>(response);
        }

        /// <summary>
        /// Test UserUpdateMember
        /// </summary>
        [Fact]
        public void UserUpdateMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //string userId = null;
            //Member body = null;
            //var response = instance.UserUpdateMember(teamId, userId, body);
            //Assert.IsType<Member>(response);
        }

        /// <summary>
        /// Test UserUpdateTeam
        /// </summary>
        [Fact]
        public void UserUpdateTeamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string teamId = null;
            //Team body = null;
            //var response = instance.UserUpdateTeam(teamId, body);
            //Assert.IsType<Team>(response);
        }
    }
}
